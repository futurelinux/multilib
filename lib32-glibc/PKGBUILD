# toolchain build order: 
# toolchain build order: lib32-glibc>binutils->lib32-gcc->binutils->lib32-glibc

_pkgbasename=glibc
pkgname=lib32-$_pkgbasename
pkgver=2.29
pkgrel=1
_commit=34fb5f61d3c3f4b8fc616ea259fa19168b58ecd4
pkgdesc="GNU C Library (32-bit)"
arch=('x86_64')
url="http://www.gnu.org/software/libc"
license=('GPL' 'LGPL')
depends=($_pkgbasename>=$pkgver)
makedepends=('gcc>=5.2' 'git' 'lib32-gcc-libs')
options=('!strip' 'staticlibs' '!emptydirs')

source=(git+https://sourceware.org/git/glibc.git#commit=${_commit}
        lib32-glibc.conf
        bz20338.patch
        0001-Revert-elf-Correct-absolute-SHN_ABS-symbol-run-time-.patch
        file-truncated-while-reading-soname-after-patchelf.patch)

md5sums=('SKIP'
         '6e052f1cb693d5d3203f50f9d4e8c33b'
         'dc0d3ad59aeaaf591b085a77de6e03e9'
         'af5d3c5227ac639effe39667a43879a1'
         '0820504d2e83ee15f74a656771361872')

prepare() {
  mkdir -p glibc-build

  cd glibc

  local i; for i in ${source[@]}; do
    case ${i%::*} in
      *.patch)
        msg2 "Applying ${i}"
        patch -p1 -i "$srcdir/${i}"
        ;;
    esac
  done
}

build() {
  cd ${srcdir}/glibc-build

  echo "slibdir=/usr/lib32" >> configparms
  echo "rtlddir=/usr/lib32" >> configparms
  echo "sbindir=/usr/sbin" >> configparms
  echo "rootsbindir=/usr/sbin" >> configparms

  #export CFLAGS="${CFLAGS} -mno-tls-direct-seg-refs"
  export CC="gcc -m32 -mstackrealign"
  export CXX="g++ -m32 -mstackrealign"

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  ../glibc/configure \
      --prefix=/usr \
      --libdir=/usr/lib32 \
      --libexecdir=/usr/lib32 \
      --with-headers=/usr/include \
      --with-bugurl=https://code.chakralinux.org/ \
      --enable-add-ons \
      --enable-bind-now \
      --enable-cet \
      --enable-lock-elision \
      --enable-multi-arch \
      --enable-stack-protector=strong \
      --enable-stackguard-randomization \
      --enable-static-pie \
      --disable-profile \
      --disable-werror \
      i686-pc-linux-gnu

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >> configparms
  make
}

check() {
  cd glibc-build

  # remove fortify in preparation to run test-suite
  sed -i '/FORTIFY/d' configparms

  # some failures are "expected"
  make check || true
}

package() {
  cd glibc-build

  make install_root=${pkgdir} install

  rm -rf ${pkgdir}/{etc,sbin,usr/{bin,sbin,share},var}

  # We need to keep 32 bit specific header files
  find ${pkgdir}/usr/include -type f -not -name '*-32.h' -delete

  # Dynamic linker
  mkdir ${pkgdir}/usr/lib
  ln -s ../lib32/ld-linux.so.2 ${pkgdir}/usr/lib/

  # Add lib32 paths to the default library search path
  install -Dm644 "$srcdir/lib32-glibc.conf" "$pkgdir/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "$pkgdir/usr/lib32/locale"

  # Do not strip the following files for improved debugging support
  # ("improved" as in not breaking gdb and valgrind...):
  #   ld-${pkgver}.so
  #   libc-${pkgver}.so
  #   libpthread-${pkgver}.so
  #   libthread_db-1.0.so

  cd $pkgdir
  find "$pkgdir"/usr/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
  find "$pkgdir"/usr/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true

  # Do not strip these for gdb and valgrind functionality, but strip the rest
  find "$pkgdir"/usr/lib \
    -not -name 'ld-*.so' \
    -not -name 'libc-*.so' \
    -not -name 'libpthread-*.so' \
    -not -name 'libthread_db-*.so' \
    -name '*-*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true
}
